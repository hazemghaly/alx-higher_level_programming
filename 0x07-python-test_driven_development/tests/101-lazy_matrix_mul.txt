===============================
 How to Use 101-lazy_matrix_mul.py
===============================

function called ``lazy_matrix_mul(m_a, m_b)``.

Numbers
=======

``lazy_matrix_mul(m_a, m_b)`` a function that mul all elements of 2 matrix.
returns the matrix of its mul.  For numbers,

::
    >>> lazy_matrix_mul = __import__('101-lazy_matrix_mul').lazy_matrix_mul
    >>> lazy_matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
    array([[ 7, 10],
           [15, 22]])

::
    >>> lazy_matrix_mul([[1, 2]], [[3, 4], [5, 6]])
    array([[13, 16]])

Non-Numbers
===========

::

    >>> lazy_matrix_mul([[1, 2], [3, 4, 5]], [[1, 2], [3, 4]])
    Traceback (most recent call last):
    TypeError: each row of m_a not the same size

::

    >>> lazy_matrix_mul([[1, 2], [3, 4]], [[1, 2, 5], [3, 4]])
    Traceback (most recent call last):
    TypeError: each row of m_b not the same size

::

    >>> lazy_matrix_mul([], [[]])
    Traceback (most recent call last):
    ValueError: m_a is empty

::

    >>> lazy_matrix_mul([[1, 2]], [])
    Traceback (most recent call last):
    ValueError: m_b is empty

::

    >>> lazy_matrix_mul([[1, 2], ["3", 4]], [[1, 2], [3, 4]])
    Traceback (most recent call last):
    TypeError: m_a should contain only int or floats

::

    >>> lazy_matrix_mul([[1, 2], [3, 4]], [["1", 2], [3, 4]])
    Traceback (most recent call last):
    TypeError: m_b should contain only int or floats

::

    >>> lazy_matrix_mul([[3, 4], [5, 6]], [[1, 5]])
    Traceback (most recent call last):
    ValueError: m_a and m_b can't be multiply

::

    >>> lazy_matrix_mul("None", [[1, 2], [3, 4]])
    Traceback (most recent call last):
    TypeError: m_a not a list

::

    >>> lazy_matrix_mul([[1, 2], [3, 4]], "None")
    Traceback (most recent call last):
    TypeError: m_b not a list
